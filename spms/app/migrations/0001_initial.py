# Generated by Django 4.1.7 on 2023-04-16 18:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User_T',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Faculty', 'Faculty'), ('Student', 'Student')], max_length=30)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Assessment_T',
            fields=[
                ('assessmentNo', models.AutoField(primary_key=True, serialize=False)),
                ('marks', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Course_T',
            fields=[
                ('courseID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('courseName', models.CharField(max_length=255)),
                ('creditNo', models.IntegerField()),
                ('prerequisiteCourse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.course_t')),
            ],
        ),
        migrations.CreateModel(
            name='Department_T',
            fields=[
                ('departmentID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('departmentName', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment_T',
            fields=[
                ('enrollmentID', models.AutoField(primary_key=True, serialize=False)),
                ('semester', models.CharField(choices=[('Spring', 'Spring'), ('Summer', 'Summer'), ('Autumn', 'Autumn')], max_length=30)),
                ('year', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='School_T',
            fields=[
                ('schoolID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('schoolName', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Section_T',
            fields=[
                ('sectionID', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('sectionNo', models.IntegerField(default=1)),
                ('semester', models.CharField(choices=[('Spring', 'Spring'), ('Summer', 'Summer'), ('Autumn', 'Autumn')], max_length=30)),
                ('course', models.ForeignKey(default='N/A', on_delete=django.db.models.deletion.CASCADE, to='app.course_t')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Program_T',
            fields=[
                ('programID', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('programName', models.CharField(max_length=255)),
                ('departmentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department_t')),
            ],
        ),
        migrations.CreateModel(
            name='PLO_T',
            fields=[
                ('ploID', models.AutoField(primary_key=True, serialize=False)),
                ('ploNo', models.IntegerField()),
                ('details', models.CharField(max_length=255)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.program_t')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation_T',
            fields=[
                ('evaluationNo', models.AutoField(primary_key=True, serialize=False)),
                ('obtainedMarks', models.FloatField()),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.assessment_t')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.enrollment_t')),
            ],
        ),
        migrations.AddField(
            model_name='enrollment_t',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.section_t'),
        ),
        migrations.AddField(
            model_name='enrollment_t',
            name='student',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='department_t',
            name='schoolID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.school_t'),
        ),
        migrations.CreateModel(
            name='CourseGrade_T',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eduYear', models.CharField(max_length=4)),
                ('eduSemester', models.CharField(max_length=25)),
                ('section', models.IntegerField(default=1)),
                ('grade', models.CharField(max_length=4)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.course_t')),
                ('studentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='course_t',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.program_t'),
        ),
        migrations.CreateModel(
            name='CO_T',
            fields=[
                ('coID', models.AutoField(primary_key=True, serialize=False)),
                ('coNo', models.IntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.course_t')),
                ('plo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.plo_t')),
            ],
        ),
        migrations.AddField(
            model_name='assessment_t',
            name='co',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.co_t'),
        ),
        migrations.AddField(
            model_name='assessment_t',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.section_t'),
        ),
        migrations.AddField(
            model_name='user_t',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.department_t'),
        ),
        migrations.AddField(
            model_name='user_t',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user_t',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
